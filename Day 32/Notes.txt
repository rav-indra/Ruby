07 November,2022

CSS 2D Transforms
  - 

CSS 3D Transforms
  - 

CSS Animation
  - 

CSS Tooltips
  - to specify extra information about something when the user moves the mouse pointer over an element
  
CSS Masking
  - create a mask layer to place over an element to partially or fully hide portions of the element
  - EX: -webkit-mask-image:url('');
        mask-image:url('');
  - one can use linear gradient as masking too
  - mask-image    :	Specifies an image to be used as a mask layer for an element
  - mask-mode   	: Specifies whether the mask layer image is treated as a luminance mask or as an alpha mask
  - mask-origin   : Specifies the origin position (the mask position area) of a mask layer image
  - mask-position :	Sets the starting position of a mask layer image (relative to the mask position area)
  - mask-repeat   :	Specifies how the mask layer image is repeated
  - mask-size   	: Specifies the size of a mask layer image

Multiple Columns
  - column-count	      : Specifies the number of columns an element should be divided into
  - column-fill	        : Specifies how to fill columns
  - column-gap	        : Specifies the gap between the columns
  - column-rule	        : A shorthand property for setting all the column-rule-* properties
  - column-rule-color	  : Specifies the color of the rule between columns
  - column-rule-style	  : Specifies the style of the rule between columns
  - column-rule-width	  : Specifies the width of the rule between columns
  - column-span	        : Specifies how many columns an element should span across
  - column-width	      : Specifies a suggested, optimal width for the columns
  - columns	            : A shorthand property for setting column-width and column-count

CSS Variables - the var() function
  - it is used to insert the value of a CSS variable
  - EX : --color: #23ff10;
        now var(--color) will represent #23ff10 color , thus if we want to change coor we have to change only one value in function 
  - to make global variable write it in :root{}

CSS @media queries
  - @media only screen and (min-width:100px;){}
  - all	    : Used for all media type devices
  - print   :	Used for printers
  - screen	: Used for computer screens, tablets, smart-phones etc.
  - speech	: Used for screenreaders that "reads" the page out loud

FlexBox-container
  - align-content   :	Modifies the behavior of the flex-wrap property. It is similar to align-items, but instead of aligning flex items, it aligns flex lines
  - align-items     :	Vertically aligns the flex items when the items do not use all available space on the cross-axis
  - display       	: Specifies the type of box used for an HTML element
  - flex-direction  :	Specifies the direction of the flexible items inside a flex container
  - flex-flow       :	A shorthand property for flex-direction and flex-wrap
  - flex-wrap       :	Specifies whether the flex items should wrap or not, if there is not enough room for them on one flex line
  - justify-content :	Horizontally aligns the flex items when the items do not use all available space on the main-axis

Flex-items
  - align-self  :	Specifies the alignment for a flex item (overrides the flex container's align-items property)
  - flex      	: A shorthand property for the flex-grow, flex-shrink, and the flex-basis properties
  - flex-basis  :	Specifies the initial length of a flex item
  - flex-grow   :	Specifies how much a flex item will grow relative to the rest of the flex items inside the same container
  - flex-shrink :	Specifies how much a flex item will shrink relative to the rest of the flex items inside the same container
  - order     	: Specifies the order of the flex items inside the same container