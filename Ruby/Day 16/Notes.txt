04 October,2022

Each_slice 
    - Each slice take the range and print in group of given numbers
        Ex : (1..10).each_slice(3){|a| puts "#{a}"}   # will return [1,2,3],[4,5,6],[7,8,9],[10]
    - Each Slice gives Enum if there is not block given

WithIndifferentAccess
    - In hash where two kiys have same name but diffrent types then this method is used
    - Ex : keys are {a: 2, b: 5} and {"a" => 3} here both a: and "a" are considered different 
      one is string and other is symbol
    - to use this method it requires 'active_support/core_ext/hash/indifferent_access'
    - It will covert hash keys to string
        Ex: h1 = ActiveSupport::HashWithIndifferentAccess.new(h1) # here hash "h1" will covert all keys to string
        
All : abc.all?{}
    - here it will check condition from block for all and if condition is true for all only then will 
      return 'True' else will return 'False'
Any : abc.any?{}
    - Here it will give block to each element and even if one element is true for condition it will return "true"
      else "false"
None: abc.none?{}
    - Here it will return "true" only if all elements doesn't pass condition else will return "false"
one : abc.one?{}
    - Here it will return "true" exactly one element pass the condition , if two elements pass condition
      it will return "false"